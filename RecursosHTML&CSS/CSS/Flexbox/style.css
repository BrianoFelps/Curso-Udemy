#container{
    background: #dcdcdc;
    height: 600px;
}

#itens1{
    width: 100%;
    display: flex;
    margin-bottom: 30px;

        /* row (padrão), row-reverse, column, column-reverse */
    /* Altera a disposição de conteúdo, e com o reverse sua posição e sequência */
    flex-direction: row;

    /* nowrap (padrão), wrap, wrap-reverse */
    /* Disposição de quebra de linha das propriedades filhas em falta de espaço
    , a padrão é não quebrar, mas espremer os itens (o reverse muda se aparece 
    embaixo ou em cima*/
    flex-wrap: wrap;

    /* flex-start (padrão), flex-end, center, space-between (grudado
    nas laterais), space-around(não grudado nas laterais) */
    /* Usada para formatar o elemento em seu eixo X */
    justify-content: center;

    /* stretch (padrão), center, flex-start, flex-end, baseline */
    /* Usada para formatar o elemento em seu eixo Y. O padrão estica o 
    componente o máximo de cima a baixo, e o baseline alinha os outros 
    itens filhos com base na posição do texto. */
    align-items: baseline;
}

#itens2{
    /* Container usado para mostrar a edição direta dos itens com propriedades
    flex */
    display: flex;
    /* Padrão, aqui pode definir a todos os itens */
    flex-grow:0;
}

.item{
    width: 100px;
    height: 100px;
    background: white;
    border: 1px solid gray;
    margin: 10px;
}

.grow1{
    /* Essa propriedade alterna a proporção que o item vai ocupar a tela com 
    o máximo de espaço disponível, sendo possível fazer um layout responsivo */
    flex-grow: 1;
}

.grow2{
    /* Quanto maior o número, maior o ocupamento de espaço, esse, por exemplo,
    ocupa o dobro daquele*/
    flex-grow: 2;
}

/* O shrink faz o processo contrário do grow, de modo a diminuir o tamanho de 
um item quando se diminui a resolução, proporcionalmente. Quanto maior o valor
menor o item*/
.shrink1{
    flex-shrink: 5;
}

.shrink2{
    flex-shrink: 10;
}

/* O flex-basis funciona como a propriedade width, definindo a largura inicial
do item. */
.basis{
    flex-basis: 300px;
}

/* Por padrão a ordem é 0, essa propriedade influencia a sequência que os itens 
são dispostos na tela */
.ordem1{
    order: 1;
}

.ordem2{
    order: 2;
}

.ordem3{
    order: 3;
}

.ordem4{
    order: 4;
}

.ordem5{
    order: 5;
}

.ordem{
    order: -1;
}